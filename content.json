{"meta":{"title":"ZY_LHC的博客","subtitle":"ZYLHCの博客","description":"博客因兴趣诞生,在不断完善中","author":"ZYLHC","url":"https://nwebstone.github.io","root":"/"},"pages":[{"title":"留言板","date":"2020-10-31T02:11:28.000Z","updated":"2021-11-23T10:50:01.880Z","comments":false,"path":"comments/index.html","permalink":"https://nwebstone.github.io/comments/index.html","excerpt":"","text":""},{"title":"关于本站","date":"2022-04-16T04:58:56.000Z","updated":"2022-04-16T18:01:10.639Z","comments":false,"path":"about/index.html","permalink":"https://nwebstone.github.io/about/index.html","excerpt":"","text":"仙气の云彩“ 认识自我、超越自我 “ 那么你离成功就又进了一步！ 当你在项目中感觉所要学习的人和事越来越多时，说明你在 成长 。 当你感觉要责怪的人和事越来越少时，说明你在 成熟 。 当你在项目中不断获得了友谊和朋友时，说明你将取得项目的 成功 。 联系我B站：bili_1423268583（萌新up） QQ：1601507099（嘀嘀~，麻烦让一下，我要开车了！） 座右铭：既然选择了远方 便只顾风雨兼程"},{"title":"archives","date":"2019-10-24T16:00:00.000Z","updated":"2021-06-27T12:40:24.587Z","comments":true,"path":"archives/index.html","permalink":"https://nwebstone.github.io/archives/index.html","excerpt":"","text":""},{"title":"分类","date":"2020-11-24T07:12:19.000Z","updated":"2021-07-26T14:44:28.785Z","comments":false,"path":"categories/index.html","permalink":"https://nwebstone.github.io/categories/index.html","excerpt":"","text":""},{"title":"我的歌单","date":"2019-05-17T08:14:00.000Z","updated":"2021-07-26T13:06:52.537Z","comments":true,"path":"music/index.html","permalink":"https://nwebstone.github.io/music/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2018-06-07T14:17:49.000Z","updated":"2021-07-27T07:31:10.990Z","comments":true,"path":"link/index.html","permalink":"https://nwebstone.github.io/link/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-11-24T07:14:39.000Z","updated":"2021-07-26T14:44:42.337Z","comments":false,"path":"tags/index.html","permalink":"https://nwebstone.github.io/tags/index.html","excerpt":"","text":""},{"title":"相册","date":"2022-04-16T19:33:07.651Z","updated":"2021-10-14T02:13:24.113Z","comments":false,"path":"List/gallery/index.html","permalink":"https://nwebstone.github.io/List/gallery/index.html","excerpt":"","text":"壁紙 世俗的欲望 OH MY GIRL 關於OH MY GIRL的圖片"},{"title":"","date":"2019-08-10T08:41:10.000Z","updated":"2022-04-16T19:01:50.785Z","comments":false,"path":"List/movies/index.html","permalink":"https://nwebstone.github.io/List/movies/index.html","excerpt":"","text":"励志视频"},{"title":"Music-BBOX","date":"2020-04-23T04:58:56.000Z","updated":"2022-04-16T18:57:18.725Z","comments":false,"path":"List/music/index.html","permalink":"https://nwebstone.github.io/List/music/index.html","excerpt":"","text":""},{"title":"","date":"2021-09-28T14:56:14.000Z","updated":"2021-09-28T16:44:43.445Z","comments":false,"path":"List/gallery/ohmygirl/index.html","permalink":"https://nwebstone.github.io/List/gallery/ohmygirl/index.html","excerpt":"","text":""},{"title":"","date":"2021-09-28T14:56:13.000Z","updated":"2021-10-14T02:11:35.135Z","comments":false,"path":"List/gallery/wallpaper/index.html","permalink":"https://nwebstone.github.io/List/gallery/wallpaper/index.html","excerpt":"","text":""}],"posts":[{"title":"浏览器工作原理和V8引擎","slug":"浏览器工作原理和V8引擎","date":"2022-04-17T05:45:09.000Z","updated":"2022-04-17T11:45:37.884Z","comments":true,"path":"posts/3.html","link":"","permalink":"https://nwebstone.github.io/posts/3.html","excerpt":"","text":"浏览器工作原理和V8引擎前端开发最主要的就是html 、css、JavaScript Javascript是非常重要的 JavaScript是Vue、React、Angular、uniapp、taro、ReactNative的基础 Javascript应用Web开发：React、Vue 、Angular 移动端开发:Reactive、Weex 小程序开发：微信小程序、支付宝小程序、uniapp、taro 桌面应用开发：Electron 后端开发：Node环境，比如express、koa、egg.js TypeScript会不会替代JavaScript??JavaScript是不会对变量进行检测，所以有很多方案，flow，TypeScript给js带来了类型检测的思想。 JavaScript是不会被替代的。 语言分发展JS是一门高级的编程语言 机器语言===》汇编语言===》高级语言（C 、C++、Java、JavaScript、Python 高级语言计算机是不认识的，需要将高级语言转变为机器指令 计算机语言运行的过程:高级语言===》汇编语言===》机器语言 高级语言又可以分为解释型语言和编译型语言 C、C++是先将代码编译为可执行文件，是一种编译型语言 JS、Python是解释型语言 JS是如何在浏览器中执行node和浏览器中都已js的解析引擎 浏览器下载资源的过程在浏览器中输入 域名==》DNS解析为ip地址（服务器的地址）==》服务器会返回一个index.html网页 ==》浏览器会对浏览器进行解析==&gt;在解析html的过程中会遇到html、css、script，下载相应的资源 ===》执行相应的资源的解析 浏览器的内核不同浏览器会又不同的内核 GecKo:早期被NetScope和Mozilla、Firefox使用 Trident:微软开发，被IE4-IE11浏览器使用，但是Edge浏览器已经转向Blink Webkit:苹果基于KHTML开发、开源，用与Safari，Chrome之前也进行使用 Blink:是WebKit的一个分支，Google开发，目前应用于Google Chrome、Edge、Opera浏览器 常说的浏览器内核指的是浏览器的排版引擎 排版引擎（layout engine)，也称为浏览器引擎（browser engine)、页面渲染引擎（rendering engine) 浏览器的渲染过程loader Loader模块负责处理所有的HTTP请求以及网络资源的缓存，相当于是从URL输入到Page Resource输出的变换过程。HTML页面中通常有外链的JS/CSS/Image资源，为了不阻塞后续解析过程，一般会有两个IO管道同时存在，一个负责主页面下载，一个负责各种外链资源的下载。 注意：虽然大部分情况下不同资源可以并发下载异步解析（如图片资源可以在主页面解析显示完成后再被显示），但JS脚本可能会要求改变页面，因此有时保持执行顺序和下载管道后续处理的阻塞是不可避免的 渲染过程1、浏览器首先下载下来的是html,浏览器内核中的html parser将html转变为DOM树。 ​ 注意：DOM形成之后，JavaScript可以对DOM进行操作 ​ 同时css样式也会被css parser进行解析成为css rules ​ DOM tree + css rules 形成render tree 2、layout计算（根据浏览器的大小和状态），计算出最终的render tree 3、painting 4、display jS代码可能对dom进行操作，可能发起请求，所以在生成dom之后会执行js JS引擎高级语言==》浏览器和node==》最终仍然是被计算机所执行 但是CPU只认识自己的指令集，实际上是机器语言，才能被CPU执行 JS引擎：将JS转换为机器语言 常见的JS引擎：SpiderMonkey:收款JS引擎 Chakra:微软开发，用于IT浏览器 JSCore：WebKit中的JS浏览器 V8引擎：Google开发的 JS引擎与浏览器内核的关系V8引擎是使用C++编写的，开源的高性能的JS和WebAssembly引擎，用于Chrome和Node.js等 实现ECMAScript和WebAssembly，并在Windows7或者更高版本使用，mac OS10.12+ JS引擎解析过程描述JS===&gt;V8引擎Parser解析(词法分析和语法分析===》解析成ast树（抽象语法树） ​ ===》ignition转变为字节码==》执行 词法分析：将关键字，标识符，变量进行解析称号对象形式 const name = 'zs' 将词解析为tokens:[{type:\"keyword\",value:\"const\"},{type:\"identifier\",value:\"name\"}.....] ast树可以被ignition被转换为字节码 JS代码为什么不能直接转变为机器指令而是转变为字节码？？字节码是跨平台的，在任何一个平台再将字节码转变为汇编指令，再转变为机器指令，运行 一个函数，如果多次执行，每次指向都要进行由字节码到汇编指令，再转变为机器指令的过程，很浪费性能，如何进行解决？？ V8引擎中TurboFan会收集信息，将多次执行的代码标记为hot，将这些代码转变的机器指令存储起来，下次执行时可以方便调用。 如果一个函数或者时方法前后两次传递的参数类型不一致，V8引擎中有Deoptimization，将之前保存的函数机器指令再次转变为字节码，重新转换机器指令，进行执行，相当V8引擎进行代码优化。 如果编写的时TypeScript代码，指向效率会比原生的JS语法高，因为规定了相应的数据类型 抽象语法树的应用babel：ts==》ast树==》generate code ==&gt;js代码 vue中的中渲染结构==》最终都是执行的render函数==》template==&gt;要将html字符串转变为结构， ​ 字符串==》ast树==》VS Node==》html结构 JS的预解析过程Bink将源码交给V8引擎，Stream获取到源码并且进行编码转换 Scanner会对源码进行词法解析，词法分析会将代码解析成为tokens 接下来tokens会被转化称为sat树,经过PreParser和Parser: ​ 1.Parser就是直接将tokens转变为ast树 ​ 2.PreParser称之为预解析,为什么需要进行预解析 ​ 这是因为并不是所有的JS代码，在一开始的时候就会被执行，如果对所有的js代码都解析会影响网页的运行效率。 ​ V8引擎实现类Lazy Parsing(延迟解析)，作用是将暂时不必要的函数进行预解析，也就是说只解析暂时需要的内容，而对函数的全量解析在函数被调用的时候才会进行。 function outer(){ function inner(){ console.log('inner') } } outer() outer内部定义了inner函数，但是inner函数没有被调用，所以只会对其进行预解析 总结JS的重要性 浏览器的工作原理 使用到V8引擎中的loader,parser,Ignition，turboFan等模块 代码分析全局变量的解析过程var name = 'zs' var num1 = 20 var num2 = 30 var result = num1+num2 解析过程 1、代码解析 ​ a.在进行解析之前V8引擎在堆内存中会创建一个**globalObject对象（全局对象Go)**，会有String,Date,Number…全局内容） ​ b.在这个对象中有一个window属性，这个属性指向globalObject(自己的属性指向自己) ​ c.解析代码时候，会将全局的属性挂载到全局对象当中，但是这个属性是没有值的,全部都是undefined //以一段伪代码表示 // 伪代码,此时函数还没有执行 var globalObject= { String:\"类\", Date:\"类\", setTimeout:\"函数\", name:undefined, num1:undefined, result:undefined } 此时,在函数定义之打印变量的值,会得到undefined,但不会报错 2、运行代码 ​ a.为了执行代码，V8引擎会创建执行上下文栈（函数调用栈）（Executions Context Stack ECSSstack） ​ 代码运行会先从磁盘加载到内存中，会对内存进行划分，一个是栈结构，一个是堆结构。 ​ 代码想要执行的时候需要放到执行上下文栈中进行执行，执行完之后弹出栈。 ​ b.一般执行上下文栈式放的是函数的，为了全局代码能够执行，会创建全局执行上下文（Global Execution Context Stack GEC) ​ 这里的代码不是函数,为了执行这些代码,会创建全局执行上下文 ​ 全局执行上下文就可以放入到执行上下文栈中进行执行 ​ 全局执行上下文中维护的是VO(variable Object 变量对象),VO指向的是GO ​ *依次执行代码** 函数的解析 1.解析过程 ​ a.V8创建全局对象,将name添加到GO中 ​ b.编译解析过程是不会执行函数的,所以就跳过foo(),继续向后编译 ​ c.遇到函数定义之后,将foo属性中添加到GO中,V8此时会开辟一块内存空间(有一个内存地址,比如0xa00),存储函数 ​ 这个空间主要包括两部分,一个是父级作用域,就是函数的上一层作用域,另一部分保存函数的函数体 ​ GO中foo属性对应的是函数的地址 2.执行过程 ​ a.var name= ‘zs’,通过VO找到GO,更改值 ​ b.指向到foo(),通过VO找到GO中的foo==&gt;对应的函数地址====&gt;此时创建函数执行上下文(Functiona Execution Context FEC) ​ 函数执行上下文中也有一个VO,这个VO指向的是AO(Activation Object) ​ 在函数执行之前会创建AO,AO存放的是函数内部定义的变量,作用类似于GO,AO中的变量开始也是undefined,函数执行完毕后,函数的 ​ 执行上下文弹出,会被销毁掉,如果再次执行上下文会再次创建函数执行上下文 //函数解析示例 var name=\"zs\" foo() function foo() { console.log(\"foo\"); }","categories":[{"name":"-生活","slug":"生活","permalink":"https://nwebstone.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[{"name":"-JS进阶","slug":"JS进阶","permalink":"https://nwebstone.github.io/tags/JS%E8%BF%9B%E9%98%B6/"}]},{"title":"HTML_01","slug":"HTML_01","date":"2022-04-17T01:24:00.000Z","updated":"2022-04-17T03:14:44.455Z","comments":true,"path":"posts/2.html","link":"","permalink":"https://nwebstone.github.io/posts/2.html","excerpt":"","text":"HTML_01网页什么是网页？网站是指在因特网上根据一定的规则，使用 HTML 等制作的用于展示特定内容相关的网页集合。 网页是网站中的一“页”，通常是 HTML 格式的文件，它要通过浏览器来阅读。 网页是构成网站的基本元素，它通常由图片、链接、文字、声音、视频等元素组成。通常我们看到的网页，常见以 .htm 或 .html 后缀结尾的文件，因此将其俗称为 HTML 文件。 常用浏览器浏览器最主要的部分是浏览器内核，负责读取网页内容，整理讯息，计算网页的显示方式并显示页面。 浏览器 内核 备注 IE Trident IE、360极速浏览器、百度浏览器 Firefox Gecko 火狐浏览器内核 Safari Webkit 苹果浏览器内核 Chrome/Opera Bink Chrome/Opera浏览器内核，Bink其实是WebKit的分支 Web标准Web 标准是由 W3C 组织和其他标准化组织制定的一系列标准的集合。W3C（万维网联盟）是国际最著名的标准化组织。 为什么指定Web标准？不同的浏览器解析相同的html文件会有差异。 制定web标准的优点：使网站便于维护，网页内容能够被更加广泛的设备访问。 Web标准的构成一个页面主要有三部分组成：结构、样式和行为，分别对应前端必备技术，html，css，javascipt 标准 说明 结构（html） 搭建网页的基本结构，实现网页的布局 样式（css) 用于美化页面，网页元素的大小，颜色，样式 行为（javascript) 实现网页的动态效果和页面与用户的交互行为 HTML基本标签html页面中的基本标签结构 &lt;html&gt; &lt;head&gt; &lt;title&gt;标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 主要内容 &lt;/body&gt; &lt;/html&gt; 在使用vscode时，使用！+tab可以自动给创建html文件的表头 &lt;!-- 文档类型的声名，告诉浏览器使用哪种HTML版本来显示网页，文档类型声名在最前面 --&gt; &lt;!DOCTYPE html&gt; &lt;!-- 定义当前文档显示的语言 en是英语 zh-CN是中文网页 --&gt; &lt;html lang=\"en\"&gt; &lt;head&gt; &lt;!-- 定义使用哪种字符编码 --&gt; &lt;!-- 常用的字符编码格式：GB2312，BIG5,GBK，UTF-8(万国码)最常用 --&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;!-- 兼容性 --&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"&gt; &lt;!-- 视口 --&gt; &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt; &lt;title&gt;标题&lt;/title&gt; &lt;/head&gt; &lt;body&gt; 主要内容 &lt;/body&gt; &lt;/html&gt; HTML常用标签标签具有语义化可以是页面的结构更加的清晰 h标签h是head的缩写，标题标签，共有六个等级，从h1到h6依次减小 &lt;h1&gt;标题内容&lt;/h1&gt; 主要：在h标签中文字会加粗变大，一个标签独占一行 p标签p是paragraph的缩写，段落标签，在标签内的为你单独为一个段落。 &lt;p&gt;这是一个段落标签&lt;/p&gt; 注意：段落中的文字会根究浏览器窗口的大小自动换行，段落与段落之间会有空隙。 br标签网页中的文本只有在到达浏览器右端的时候才能进行自动换行，如果希望某段文本进行强制换行可以使用br标签 &lt;br /&gt; 注意：br标签是一个单标签，br标签换行之后的文本上下是没有空袭的，段落标签换行后会形成两个段落，上下两个段落之间会有一定的空隙。 文本格式化标签文本格式化标签就是给文本添加一定样式的标签。 语义 标签 说明 加粗 或者是 strong标签语义更加强烈 倾斜 或者 经常全局曲消倾斜，用i标签放置小图标 删除线 或者 del标签语义更加强烈 下划线 或者 ins标签语义更加强烈 div与span标签div：是用来进行布局的，但是一行只能放一个 span：用于布局，一行可以有多个span标签 这里只简单了解一些两个标签不同，后面会详细说明。 图像标签&lt;!-- img标签用于定义页面中的图像 --&gt; &lt;img src=\"图片存放的路径\" alt=\"加载不出来时显示文本\" title=“鼠标经过之后会显示图片的标题” width=“100px” 设置宽度 height=\"100px\" 设置高度 border=“1px” 设置边框 /&gt; 相对路径与绝对路径相对路径：相对于当前文件的路径来说的，写路径的时候从当前路径开始写 ./表示当前路径 ../表示上一级路径 绝对路径：从磁盘的根路径开始找 比如c:/…… 绝对路径的缺点:如果将文件发给别人使用,会找不到资源 a标签超链接标签 &lt;!-- _blnk在新的页面打开链接 _self在当前页面打开链接 herf链接可以是外部链接如www.baidu.com 可以是空链接 herf=\"#\" 可以是内部的链接 herf=\"index.html\" --&gt; &lt;a herf=\"点击之后要跳转的链接\" target=\"_blank/_self\"&gt;文本\\图像\\表格&lt;/a&gt; 标签中的特殊字符","categories":[{"name":"-HTML","slug":"HTML","permalink":"https://nwebstone.github.io/categories/HTML/"}],"tags":[]},{"title":"02-博客诞生","slug":"02-博客诞生","date":"2022-04-16T19:10:51.000Z","updated":"2022-04-17T03:23:02.427Z","comments":true,"path":"posts/1.html","link":"","permalink":"https://nwebstone.github.io/posts/1.html","excerpt":"","text":"博客诞生","categories":[{"name":"-生活","slug":"生活","permalink":"https://nwebstone.github.io/categories/%E7%94%9F%E6%B4%BB/"}],"tags":[]},{"title":"博客与博主","slug":"01-博客诞生","date":"2021-05-27T13:00:00.000Z","updated":"2022-04-16T19:36:26.933Z","comments":true,"path":"posts/1.html","link":"","permalink":"https://nwebstone.github.io/posts/1.html","excerpt":"","text":"相遇皆是缘分 为什么建博客？肿么说了! 纯属个人兴趣，好玩，唉，就是玩!嘻嘻! 会有些成就感吧,拥有一个自己的博客写一些自己感兴趣的事或物,不是一件很酷的事嘛! 展望博客我会整理一些个人所学的知识（学前端的，也会捣鼓捣鼓一些其它的专业的知识）或生活方面有兴趣的事发到博客上供大家观摩 关于博主有位可爱的（小）朋友，给我取名叫 “仙气”，这是也是我博客上自居 “仙气” 的由来。喜欢自己所喜欢的，做自己想做的，追求自由与潇洒，多酷啊！ 想法是美好的，可现实… … 给大家推荐一首诗吧 《自由与爱情》---作者:裴多菲 ​ 生命诚可贵 ​ 爱情价更高 ​ 若为自由故 ​ 二者皆可抛 溜溜球啦！","categories":[],"tags":[]}],"categories":[{"name":"-生活","slug":"生活","permalink":"https://nwebstone.github.io/categories/%E7%94%9F%E6%B4%BB/"},{"name":"-HTML","slug":"HTML","permalink":"https://nwebstone.github.io/categories/HTML/"}],"tags":[{"name":"-JS进阶","slug":"JS进阶","permalink":"https://nwebstone.github.io/tags/JS%E8%BF%9B%E9%98%B6/"}]}